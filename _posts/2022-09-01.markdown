---
layout: post
title: "[ETC] Code Refactoring"
subtitle: "코드 리펙토링"
categories: "study"
tags: "etc"
---

## 코드 리펙토링 이란?

refactoring은 '결과의 변경없이 코드의 구조를 재조정함'을 뜻함.

1. 주로 가독성을 높이고 유지보수를 편하게 한다.
2. 버그를 없애거나 새로운 기능을 추가하는 행위는 아니다.
3. 사용자가 보는 외부 화면은 그대로 두면서 내부 논리나 구조를 개선하는 유지보수 행위이다.

---

## Refactoring 의 목적

리팩토링의 목적은 소프트웨어를 더 이해하기 쉽고 수정하기 쉽게 만드는 것  
리팩토링은 성능을 최적화 시키는 것이 x.  
코드를 신속하게 개발할 수 있도록 만들어주고 코드 품질을 좋게 만들어준다!!

-> 현재 코드의 동작은 그대로 유지하면서 이해하기 쉽고, 확장하기 쉽게 재구성 하는 것

---

## Refactoring 사용 시기

- 삼진 규칙(3번의 중복 / 3번의 같은 행위를 한다면 리펙토링 진행)

- 기능을 추가할 대 리펙토링을 하자

- 버그를 수정해야 할 때 리펙토링을 하라.

- 코드 검토를 할 때 리펙토링을 하라.

---

출처 : https://velog.io/@rlrhs11/Code-Refactoring%EC%BD%94%EB%93%9C-%EB%A6%AC%ED%8E%99%ED%86%A0%EB%A7%81-%EC%9D%B4%EB%9E%80
